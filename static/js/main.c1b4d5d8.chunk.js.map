{"version":3,"sources":["components/TodoInput.js","components/TodoItem.js","components/TodoList.js","components/TodoFilter.js","components/TodoApp.js","App.js","index.js"],"names":["TodoInput","onAdd","useState","todoInput","setTodoInput","id","className","placeholder","autoFocus","onChange","event","target","value","onKeyPress","key","TodoItem","item","todoItemHandler","isShow","content","status","onToggle","onEdit","onRollback","onCommit","onDelete","editContent","setEditContent","finishEdit","newItem","trim","alert","keyInput","type","onClick","toggle","onDoubleClick","onKeyUp","hidden","TodoList","itemList","map","TodoFilter","totalCount","todoFilterHandler","showAll","showActive","showCompleted","href","TodoApp","todoList","setTodoList","currentStatus","setCurrentStatus","setTotalCount","setId","todoInputHandler","concat","updatedList","filter","deletedList","length","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c1b4d5d8.chunk.js","sourcesContent":["import React, { useState } from 'react';\n\nfunction TodoInput({ onAdd }) {\n  const [todoInput, setTodoInput] = useState(\"\");\n\n  const keyInput = (event) => {\n    setTodoInput(event.target.value);\n  }\n\n  const onKeyPress = (event) => {\n    if(event.key === \"Enter\"){\n      onAdd(event, todoInput);\n      setTodoInput(\"\");\n    }\n  }\n\n  return (\n    <input id=\"new-todo-title\" className=\"new-todo\" placeholder=\"Ìï†ÏùºÏùÑ Ï∂îÍ∞ÄÌï¥Ï£ºÏÑ∏Ïöî\" autoFocus\n           onChange={keyInput} onKeyPress={(event) => onKeyPress(event, todoInput)} value={todoInput}/>\n  );\n}\n\nexport default TodoInput;","import React, { useState } from 'react';\n\nfunction TodoItem({ item, todoItemHandler, isShow }) {\n  const { id, content, status } = item;\n  const { onToggle, onEdit, onRollback, onCommit, onDelete } = todoItemHandler;\n  const [editContent, setEditContent] = useState(content);\n\n  const toggle = (event) => {\n    const newItem = {\n      id: item.id,\n      content: item.content,\n    };\n    if (status === \"completed\") {\n      newItem.status = \"active\";\n    } else if (status === \"active\") {\n      newItem.status= \"completed\";\n    }\n    onToggle(event, id, newItem);\n  };\n\n  const finishEdit = (event) => {\n    const newItem = {\n      id: item.id,\n      status: \"active\",\n    };\n    if(item.status === \"editing\") {\n      if (event.key === \"Enter\") {\n        if(!editContent.trim()){\n          alert(\"Í≥µÎ∞±ÏùÄ ÏûÖÎ†•ÌïòÏã§ Ïàò ÏóÜÏäµÎãàÎã§ üòµ\")\n          return;\n        }\n        newItem.content = editContent;\n        onCommit(event, id, newItem);\n      } else if (event.key === \"Escape\") {\n        newItem.content = content;\n        onRollback(event, id, newItem);\n      }\n    }\n  }\n\n  const keyInput = (event) => {\n    setEditContent(event.target.value);\n  }\n\n  if (isShow(status)) {\n    return (\n      <li className={status} key={id}>\n        <div className=\"view\">\n          <input className=\"toggle\" type=\"checkbox\" onClick={(event) => toggle(event, id)}/>\n          <label className=\"label\" onDoubleClick={(event) => onEdit(event, id)}>{content}</label>\n          <button className=\"destroy\" onClick={(event) => onDelete(event, id)}/>\n        </div>\n        <input className=\"edit\" onChange={keyInput} onKeyUp={event => finishEdit(event)} value={editContent}/>\n      </li>\n    );\n  }\n  return (\n    <li hidden=\"hidden\" className={status} key={id}>\n      <div className=\"view\">\n        <input className=\"toggle\" type=\"checkbox\" onClick={(event) => onToggle(event, id)}/>\n        <label className=\"label\">{content}</label>\n        <button className=\"destroy\" onClick={(event) => onDelete(event, id)}/>\n      </div>\n      <input className=\"edit\" onChange={keyInput} onKeyUp={event => finishEdit(event)} value={editContent}/>\n    </li>\n  );\n}\n\nexport default TodoItem;","import React from 'react';\nimport TodoItem from './TodoItem';\n\nfunction TodoList({ itemList, todoItemHandler, isShow }) {\n  return (\n    <ul id=\"todo-list\" className=\"todo-list\">\n      {itemList.map(item => <TodoItem key={item.id} item={item} todoItemHandler={todoItemHandler}\n                                      isShow={isShow}/>)}\n    </ul>\n  );\n}\n\nexport default TodoList;","import React from 'react';\n\nfunction TodoFilter({ status, totalCount, todoFilterHandler }) {\n  const { showAll, showActive, showCompleted } = todoFilterHandler;\n\n  if (status === \"all\") {\n    return (\n      <div className=\"count-container\">\n        <span className=\"todo-count\">Ï¥ù <strong>{totalCount}</strong> Í∞ú</span>\n        <ul className=\"filters\">\n          <li>\n            <a className=\"all selected\" href=\"#/\" onClick={showAll}>Ï†ÑÏ≤¥Î≥¥Í∏∞</a>\n          </li>\n          <li>\n            <a className=\"active\" href=\"#/active\" onClick={showActive}>Ìï¥ÏïºÌï† Ïùº</a>\n          </li>\n          <li>\n            <a className=\"completed\" href=\"#/completed\" onClick={showCompleted}>ÏôÑÎ£åÌïú\n              Ïùº</a>\n          </li>\n        </ul>\n      </div>\n    );\n  } else if (status === \"active\") {\n    return (\n      <div className=\"count-container\">\n        <span className=\"todo-count\">Ï¥ù <strong>{totalCount}</strong> Í∞ú</span>\n        <ul className=\"filters\">\n          <li>\n            <a className=\"all\" href=\"#/\" onClick={showAll}>Ï†ÑÏ≤¥Î≥¥Í∏∞</a>\n          </li>\n          <li>\n            <a className=\"active selected\" href=\"#/active\" onClick={showActive}>Ìï¥ÏïºÌï†\n              Ïùº</a>\n          </li>\n          <li>\n            <a className=\"completed\" href=\"#/completed\" onClick={showCompleted}>ÏôÑÎ£åÌïú\n              Ïùº</a>\n          </li>\n        </ul>\n      </div>\n    );\n  } else if (status === \"completed\") {\n    return (\n      <div className=\"count-container\">\n        <span className=\"todo-count\">Ï¥ù <strong>{totalCount}</strong> Í∞ú</span>\n        <ul className=\"filters\">\n          <li>\n            <a className=\"all\" href=\"#/\" onClick={showAll}>Ï†ÑÏ≤¥Î≥¥Í∏∞</a>\n          </li>\n          <li>\n            <a className=\"active\" href=\"#/active\" onClick={showActive}>Ìï¥ÏïºÌï† Ïùº</a>\n          </li>\n          <li>\n            <a className=\"completed selected\" href=\"#/completed\"\n               onClick={showCompleted}>ÏôÑÎ£åÌïú Ïùº</a>\n          </li>\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default TodoFilter;","import React, { useState } from 'react';\nimport TodoInput from './TodoInput';\nimport TodoList from './TodoList';\nimport TodoFilter from './TodoFilter';\n\nfunction TodoApp() {\n  const [todoList, setTodoList] = useState([]);\n  const [currentStatus, setCurrentStatus] = useState(\"all\");\n  const [totalCount, setTotalCount] = useState(0);\n  const [id, setId] = useState(0);\n\n  const todoInputHandler = {\n    onAdd: (event, todoInput) => {\n      if (!todoInput.trim()) {\n        alert(\"Í≥µÎ∞±ÏùÄ ÏûÖÎ†•ÌïòÏã§ Ïàò ÏóÜÏäµÎãàÎã§ üòµ\");\n        return;\n      }\n      const item = {\n        id: id,\n        content: todoInput,\n        status: \"active\",\n      };\n      setId(id + 1);\n      setTotalCount(totalCount + 1);\n      setTodoList(todoList.concat(item));\n      event.target.value = \"\";\n    }\n  }\n\n  const todoItemHandler = {\n    onToggle: (event, id, newItem) => {\n      const updatedList = todoList.map(item => {\n        if (item.id === id) {\n          return newItem;\n        }\n        return item;\n      });\n      setTodoList(updatedList);\n    },\n\n    onEdit: (event, id) => {\n      const [item] = todoList.filter(item => item.id === id);\n      const newItem = {\n        id: item.id,\n        content: item.content,\n        status: \"editing\",\n      };\n      const updatedList = todoList.map(item => {\n        if (item.id === id && item.status === \"active\") {\n          return newItem;\n        }\n        return item;\n      });\n      setTodoList(updatedList);\n    },\n\n    onRollback: (event, id, newItem) => {\n      const updatedList = todoList.map(item => {\n        if (item.id === id) {\n          return newItem;\n        }\n        return item;\n      });\n      setTodoList(updatedList);\n    },\n\n    onCommit: (event, id, newItem) => {\n      const updatedList = todoList.map(item => {\n        if (item.id === id) {\n          return newItem;\n        }\n        return item;\n      });\n      setTodoList(updatedList);\n    },\n\n    onDelete: (event, id) => {\n      const deletedList = todoList.filter(item => item.id !== id);\n      setTodoList(deletedList);\n      setTotalCount(totalCount-1);\n    },\n  }\n\n  const todoFilterHandler = {\n    showAll: () => {\n      setCurrentStatus(\"all\");\n      setTotalCount(todoList.length);\n    },\n    showActive: () => {\n      setCurrentStatus(\"active\");\n      setTotalCount(todoList.filter(item => item.status === \"active\").length);\n    },\n    showCompleted: () => {\n      setCurrentStatus(\"completed\");\n      setTotalCount(todoList.filter(item => item.status === \"completed\").length);\n    },\n  }\n\n  const isShow = (status) => {\n    return status === currentStatus || currentStatus === \"all\";\n  }\n\n  return (\n    <section className=\"todoapp\">\n      <div>\n        <h1>TODOS</h1>\n        <TodoInput onAdd={todoInputHandler.onAdd}/>\n      </div>\n      <div className=\"main\">\n        <input className=\"toggle-all\" type=\"checkbox\"/>\n        <TodoList itemList={todoList} todoItemHandler={todoItemHandler} isShow={isShow}/>\n      </div>\n      <TodoFilter status={currentStatus} totalCount={totalCount}\n                  todoFilterHandler={todoFilterHandler}/>\n    </section>\n  );\n}\n\nexport default TodoApp;","import React from 'react';\nimport './App.css';\nimport TodoApp from './components/TodoApp';\n\nfunction App() {\n  return (\n    <TodoApp/>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}